volumes:
  staticfiles:     # Named volume for static files
  dbdata:          # Named volume for database
  celerybeatdata:  # Named volume for Celery Beat data
  mediafiles:      # Named volume for media files
  logdata:         # Named volume for Elasticsearch data
  kibana-config:   # Named volume for Kibana configuration

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django-backend
    command: >
      sh -c "./wait-for-db.sh db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py create_admin &&
             python manage.py collectstatic --noinput &&
             uvicorn ft_transcendance.asgi:application --host 0.0.0.0 --port 8000 --reload"
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
    ports:
      - "8000:8000"  # Backend port
    volumes:
      - ./backend:/app  # Bind mount backend code for live updates
      - staticfiles:/app/staticfiles  # Named volume for static files
      - mediafiles:/app/media  # Named volume for media files
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: always
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash:12201"

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: nginx-server
    ports:
      - "8080:8080"  # HTTP
      - "8443:8443"  # HTTPS
    volumes:
      - ./frontend:/usr/share/nginx/html  # Bind mount frontend
      - staticfiles:/app/staticfiles  # Named volume for static files
      - mediafiles:/app/media  # Named volume for media files
      - ./nginx/logs:/var/log/nginx  # Mount Nginx logs for ELK integration
    depends_on:
      - backend
    restart: always
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash:12201"

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: ft_transcendence
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: HK@12345@42Student
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6380:6379"
    restart: always

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery-worker
    command: celery -A ft_transcendance worker --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    env_file:
      - .env
    restart: always
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash:12201"

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery-beat
    command: >
      sh -c "./wait-for-db.sh db &&
             python manage.py setup_celery_beat &&
             celery -A ft_transcendance beat --loglevel=info --schedule=/app/data/celerybeat-schedule"
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    env_file:
      - .env
    volumes:
      - celerybeatdata:/app/data
    restart: always
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash:12201"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - logdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"  # Elasticsearch API
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.1
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"  # Kibana Dashboard
    volumes:
      - kibana-config:/usr/share/kibana/config
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.1
    container_name: logstash
    depends_on:
      - elasticsearch
    ports:
      - "12201:12201/udp"  # GELF input for logs
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # Pipeline configuration
      - ./nginx/logs:/var/log/nginx
    restart: always
