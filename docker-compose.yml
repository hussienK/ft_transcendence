services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ft_transcendance_app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
    depends_on:
      - db
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    profiles:
      - production
    volumes:
      - app_data:/app  # Default named volume (used for production)

  app-development:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ft_transcendance_app_dev
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
    depends_on:
      - db
    profiles:
      - development
    volumes:
      - ./backend:/app/backend  # Bind-mount for live development

  db:
    image: postgres:14
    container_name: ft_transcendance_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ft_transcendence
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: ft_transcendance_nginx
    ports:
      - "5050:80"
    profiles:
      - production

  nginx-development:
    image: nginx:latest
    container_name: ft_transcendance_nginx_dev
    ports:
      - "5050:80"
    profiles:
      - development
    volumes:
      - ./frontend:/usr/share/nginx/html:ro  # Bind-mount for live updates

volumes:
  app_data:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /goinfre/postgres
