# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: ft_transcendance_app
#     ports:
#       - "8000:8000"
#     environment:
#       - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
#     depends_on:
#       - db
#       - celery-worker
#       - celery-beat
#     command: >
#       sh -c "python manage.py makemigrations &&
#              python manage.py migrate &&
#              python manage.py runserver 0.0.0.0:8000"
#     profiles:
#       - production
#     volumes:
#       - app_data:/app  # Default named volume (used for production)

#   app-development:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: ft_transcendance_app_dev
#     ports:
#       - "8000:8000"
#     environment:
#       - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
#     depends_on:
#       - db
#       - celery-worker
#       - celery-beat
#     profiles:
#       - development
#     volumes:
#       - ./backend:/app/backend  # Bind-mount for live development

#   redis:
#     image: redis:6.2
#     container_name: ft_transcendance_redis
#     ports:
#       - "6379:6379"

#   celery-worker:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: ft_transcendance_celery_worker
#     command: celery -A ft_transcendance worker --loglevel=info
#     depends_on:
#       - redis
#       - db
#     environment:
#       - CELERY_BROKER_URL=redis://redis:6379/0

#   celery-beat:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: ft_transcendance_celery_beat
#     command: celery -A ft_transcendance beat --loglevel=info
#     depends_on:
#       - redis
#       - db
#     environment:
#       - CELERY_BROKER_URL=redis://redis:6379/0

#   db:
#     image: postgres:14
#     container_name: ft_transcendance_db
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: ft_transcendence
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#       - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#     ports:
#       - "5432:5432"

#   nginx:
#     build:
#       context: .
#       dockerfile: Dockerfile.nginx
#     container_name: ft_transcendance_nginx
#     ports:
#       - "5050:80"
#     profiles:
#       - production

#   nginx-development:
#     image: nginx:latest
#     container_name: ft_transcendance_nginx_dev
#     ports:
#       - "5050:80"
#     profiles:
#       - development  # Runs only in development
#     volumes:
#       - ./frontend:/usr/share/nginx/html:ro  # Bind-mount for live updates

# volumes:
#   app_data:
#   postgres_data:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /c/goinfre/postgres
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: django-backend
    container_name: django-backend
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
      - POSTGRES_NAME=postgresdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespassword
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db
    volumes:
      - /goinfre/backend-data:/app/data
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: html-frontend
    container_name: html-frontend
    ports:
      - "5500:80"
    restart: always

  db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ft_transcendance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - /goinfre/postgres-data:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: celery-worker
    container_name: celery-worker
    command: celery -A ft_transcendance worker --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    restart: always

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: celery-beat
    container_name: celery-beat
    command: >
      sh -c "python manage.py setup_celery_beat &&
           celery -A ft_transcendance beat --loglevel=info --schedule=/app/data/celerybeat-schedule"
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendance.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    volumes:
      - /goinfre/celery-beat-data:/app/data  # Ensure persistent storage
    restart: always


